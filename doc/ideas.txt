OpenCL Image Toolkit - Ideas draftbook

* Node chain
  - Every filter is a node.
  - Every node is connected to 0/1 input nodes and 0/1 output nodes (a pipeline).
  - Node with 0 inputs (only first node) holds source image.
    - Interfaces with importer for getting image data.
    - Defines initial data format for the pipeline (RGB8 or RGB32F).
    - Special case of data cache node (always marked as "clean") - see below.
  - Node with 0 outputs (only last node) is the blitter node (triggers render event).
    - Interfaces with exporter to write image data to disk (when requested).
    - Can upscale/downscale source image before saving or blitting
      (with configurable scale algorithm).
  - Nodes can be arbitrarily enabled/disabled by the user. Disabled nodes are skipped
    by pipeline recomputation.
    - Source (first) and blitter (last) nodes cannot be disabled (obviously).
  - Node data exchange: arbitrary number of PBOs and one special "register PBO"
    - Two primary PBOs (default input and default output PBO)
      - Swapped as pipeline progresses (one node output becomes next node input).
      - Some nodes can use one of their auxiliary PBOs as output buffer.
        Example: downscale node can output to its aux PBO of smaller size, compared
                 to default output PBO.
        Advantage: primary PBOs reinitialization (due to size change back and forth)
                   at each pipeline recomputation is avoided.
    - Dynamic number of auxiliary PBOs
      - Sequentially allocated on-demand when pipeline is modified.
        Example: user adds new node, that node needs special buffer, a buffer of
                 next free ID is given to that node.
      - Deallocated and marked as free on node removal.
      - Example of aux buffer: histogram data
    - Special register PBO
      - 65536 ints, 65536 floats for reading/writing simple values.
      - Standard locations for common data by known index values (via #defines).
      - Can be used to pass arguments from one node to the next.
    - Explicit data conversion nodes
      - For example: RGB <-> float or image dimension change.
      - Very costly as involved PBOs need to be reinitialized - should be avoided!
    - Explicit data cache nodes
      - Hold pipeline result "so far".
      - Any parameter change in processing node marks any subsequent cache nodes "dirty".
      - Recomputation starts at first clean cache node and regenerates all
        dirty cache nodes along the way.
      - What caching policy?
        - VRAM is very limited.
        - Automatic or user-controlled?
